(function(){

    $("body").bind("DOMSubtreeModified", function() {
        $(this).find(".dz-remove").addClass('btn btn-danger');
    });

    //  Add the clickable and preview divs for the dropzone
    $(".buttonHolder").
        after("<div id='clickable'></div>").
            after("<hr/><div class='dz-preview' id='dz-preview-div'></div>");

    Dropzone.options.fbForm = {
        init: function(){

            var self = this;
            // URl of the form action
            var $formAction = fb.$form.attr("action");

            //  Counter for files added
            var fileCount = 0;
            //  The message if the regex check fails for filenames
            var fileValidationMessage = "Please rename {f} and try again.<br>";
            fileValidationMessage += "Only digits, letters, -, _, (, ), spaces and a ";
            fileValidationMessage += "single period before the file extension are allowed. <br><br>{f} has been removed.";

            /*  Move the dz-default div generated by dropzone into the clickable div created above
                the dz-default div generated by dropzone contains all the correct html and classes
                to take advantage of all the styling provided by dropzone.
                No need to remake it. */
            $(".dz-default.dz-message").detach().appendTo("#clickable");



            this.processForm = function(){

                if (self.getQueuedFiles().length > 0) {
                    self.processQueue();
                }
                else {

                    fb.$submit.attr("disabled", "true");

                    $.ajax({

                        url: $formAction,
                        method: "POST",
                        data: fb.$form.serialize(),
                        success: function(response){
                            console.log("success");
                            if (response.status == 200){

                                //fb.$submit.removeAttr("disabled");
                                window.location = response.redirect;
                            }
                            else if (response.status == 302) {

                                alert("here!");

                            }
                            else {

                                fb.$submit.removeAttr("disabled");
                                // TODO - real error logging
                                console.log("error");
                            }

                        },
                        error: function(xhr){
                            fb.displayError("There was a problem sending the form data to the server");
                            fb.$submit.removeAttr("disabled");
                        }
                    });
                }

            };

            // -------- Event Handling ---------

            fb.$form.on({
                "recaptcha:success": function(event){
                    console.log("recaptcha:success triggered");
                    console.log(event);
                    self.processForm();
                },
                "recaptcha:fail": function(event, response){
                    console.log("recaptcha:fail triggered");

                    fb.$submit.removeAttr("disabled");

                    var errors = response["error-codes"];

                    for (var i=0; i< errors.length; i++){

                        console.log(errors[i]);
                        var message = "reCaptcha Error: " + errors[i];

                        fb.displayError(message);
                    }

                }
            });

            //  addedFile event functionality
            this.on("addedfile", function(file){
                fileCount++;
                if (!file.name.match(/^[\()_\-\s\d\w]+([\.]?[_\-\s\d\w]+)?$/)) {
                    fb.displayError(fileValidationMessage.replaceAll("{f}", file.name));
                    self.removeFile(file);
                }
                fileCount++;
                console.log(file)


            });
            //  removedFile event functionality
            this.on("removedFile", function(file){
                fileCount--;
            });

            this.on("error", function(file, response, xhrObject){

                fb.$submit.removeAttr("disabled");
                console.log(file, response, xhrObject);

            });

            this.on("success", function(file, response, xhrObject){

                console.log("Dropzone success..")
                console.log(file, response);

            });

            this.on("successmultiple", function(file, response, xhrObject){



                console.log("Dropzone successmultiple..")
                console.log(file, response);

                var complete = function(){

                    //fb.$submit.removeAttr("disabled");
                    window.location = response.redirect;
                }

                setTimeout(complete, 1750);


            });


        },
        autoProcessQueue: false,
        previewsContainer: "#dz-preview-div",
        addRemoveLinks: true,
        clickable: "#clickable",
        dictDefaultMessage: '<img class="img-responsive" src="/static/img/dzimage.png">',
        uploadMultiple: true,
        parallelUploads: 10,
        maxFiles: 10,
        maxFilesize: 50,
        dictResponseError: "There was an error processing your request",
        dictCancelUpload: ""
    }

})();
